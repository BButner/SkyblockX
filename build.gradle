plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

group 'io.illyria'
version 'v1.0.0.1-alpha'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
    }
    maven {
        url 'https://nexus.illyria.io/repository/maven-public/'
    }
    maven {
        url 'https://rayzr.dev/repo/'
    }
    maven {
        url 'https://libraries.minecraft.net/'
    }
    maven {
        url "http://repo.dmulloy2.net/nexus/repository/public/"
    }
    maven {
        url "http://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
}


dependencies {
    compileOnly 'me.clip:placeholderapi:2.9.2'
    compile 'com.github.stefvanschie.inventoryframework:IF:0.5.13'
    compileOnly ("org.spigotmc:spigot-api:1.14.2-R0.1-SNAPSHOT") {
        exclude group: 'net.md-5', module: 'bungeecord-chat'
        exclude group: 'javax.persistence', module: 'persistence-api'
        exclude group: 'junit', module: 'junit'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.code.gson', module: 'gson'
    }
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'net.prosavage:BasePlugin:1.5'
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.4.0"
    compile 'me.rayzr522:jsonmessage:1.2.0'
}
processResources {
    eachFile { details ->
        if (details.name.endsWith('.yml')) { // or whatever pattern/criteria is appropriate
            filter{
                String line -> line.replaceAll('\\$\\{project.version\\}', version)
            }
        }
    }
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    relocate 'com.github.stefvanschie.inventoryframework', 'io.illyria.skyblockx.shade.stefvanschie.inventoryframework'
    relocate 'com.google.gson', 'io.illyria.skyblockx.shade.com.google.gson'
    relocate 'net.prosavage.baseplugin', 'io.illyria.skyblockx.shade.baseplugin'
    relocate 'org.jetbrains.kotlin', 'io.illyria.skyblockx.shade.kotlin'
    relocate 'me.rayzr522.jsonmessage', 'io.illyria.skyblockx.shade.jsonmessage'
    archiveName 'SkyblockX.jar'
}

task updatePermissionsList {
    File permissionsFile = file(".\\src\\main\\kotlin\\io\\illyria\\skyblockx\\core\\Permission.kt")
    String text = permissionsFile.text
    // Splits the file's text @ `{`.
    // The first one should show the beginning of the class.
    String[] textSplit = text.split("\\{")
    String permissionsEnumText = textSplit[1].split(";")[0]
    String[] permissionsListRaw = permissionsEnumText.split("\\),")
    println permissionsListRaw.size()
    // Process each permission.
    StringBuilder table = new StringBuilder()
    table.append("Permission Name | Permission Node | Permission Description | Permission Default \n")
    table.append("--- | --- | --- | ---")
    for (String permissionRaw : permissionsListRaw) {
        String[] permissionSplit = permissionRaw.split(",")
        String permissionName = permissionSplit[0].replace(" ", "")
        String permissionDesc = permissionSplit[1].replace("\"", "")
        String permissionNode = "skyblockx." + permissionName.split("\\(\"")[1].replace("\"","")
        String permissionDefault = permissionSplit[2].replace("\"", "").replace("PermissionDefault.", "")
        table.append("${permissionName.split("\\(\"")[0]} | `$permissionNode` | $permissionDesc | $permissionDefault")
    }
    println("File Processed.")
    // Clone and update wiki.
    delete "./Wiki"
    println("Deleted Wiki Folder.")
    exec { commandLine 'git', 'clone', 'https://github.com/illyria-io/SkyblockX.wiki.git', 'Wiki' }
    println("Wiki Cloned")
    File permissionsWikiFile = file(".\\Wiki\\Permissions.md")
    delete "./Wiki/Permissions.md"
    println("Old Permissions.md Deleted.")
    permissionsWikiFile.createNewFile()
    println("New Permissions.md Created.")
    permissionsWikiFile.text = table.toString()
    println("Permissions.md file content set.")
}

task ci {
    dependsOn clean
    dependsOn shadowJar
}